##
## VMware platform registration
##
$(eval $(call addplat_s,vmware,$(CONFIG_PLAT_VMWARE)))

##
## VMware platform library registration
##
$(eval $(call addplatlib,vmware,libvmwareplat))
$(eval $(call addplatlib_s,vmware,libvmwarepl031,$(CONFIG_RTC_PL031)))

##
## Platform library definitions
##
LIBVMWAREPLAT_ASINCLUDES-y        += -I$(LIBVMWAREPLAT_BASE)/include
LIBVMWAREPLAT_ASINCLUDES-y        += -I$(UK_PLAT_COMMON_BASE)/include
LIBVMWAREPLAT_CINCLUDES-y         += -I$(LIBVMWAREPLAT_BASE)/include
LIBVMWAREPLAT_CINCLUDES-y         += -I$(UK_PLAT_COMMON_BASE)/include
LIBVMWAREPLAT_CINCLUDES-y         += -I$(UK_PLAT_DRIVERS_BASE)/include

LIBVMWAREPLAT_ASFLAGS             += -DVMWAREPLAT -DUK_USE_SECTION_SEGMENTS
LIBVMWAREPLAT_CFLAGS              += -DVMWAREPLAT -DUK_USE_SECTION_SEGMENTS
LIBVMWAREPLAT_CXXFLAGS            += -DVMWAREPLAT -DUK_USE_SECTION_SEGMENTS

##
## Default Linker script
ifeq ($(CONFIG_ARCH_X86_64),y)
UK_PLAT_VMWARE_DEF_LDS            := $(CONFIG_UK_BASE)/plat/vmware/x86/link64.lds.S
else
ifeq ($(CONFIG_ARCH_ARM_64),y)
UK_PLAT_VMWARE_DEF_LDS            := $(CONFIG_UK_BASE)/plat/vmware/arm/link64.lds.S
endif
endif


##
## Architecture library definitions for x86_64
##
ifeq ($(CONFIG_PAGING),y)
LIBVMWAREPLAT_SRCS-$(CONFIG_ARCH_X86_64) += $(UK_PLAT_COMMON_BASE)/paging.c|isr
endif
LIBVMWAREPLAT_SRCS-$(CONFIG_ARCH_X86_64) += $(UK_PLAT_COMMON_BASE)/x86/trace.c|common
LIBVMWAREPLAT_SRCS-$(CONFIG_ARCH_X86_64) += $(UK_PLAT_COMMON_BASE)/x86/traps.c|isr
LIBVMWAREPLAT_SRCS-$(CONFIG_ARCH_X86_64) += $(UK_PLAT_COMMON_BASE)/x86/cpu_native.c|common
LIBVMWAREPLAT_SRCS-$(CONFIG_ARCH_X86_64) += $(UK_PLAT_COMMON_BASE)/x86/lcpu.c|x86_common
LIBVMWAREPLAT_SRCS-$(CONFIG_ARCH_X86_64) += $(UK_PLAT_COMMON_BASE)/tls.c|common
ifeq ($(CONFIG_HAVE_SYSCALL),y)
LIBVMWAREPLAT_SRCS-$(CONFIG_ARCH_X86_64) += $(UK_PLAT_COMMON_BASE)/x86/syscall.S|common
endif
LIBVMWAREPLAT_SRCS-$(CONFIG_ARCH_X86_64) += $(LIBVMWAREPLAT_BASE)/x86/multiboot.S|x86
LIBVMWAREPLAT_SRCS-$(CONFIG_ARCH_X86_64) += $(LIBVMWAREPLAT_BASE)/x86/multiboot.c
LIBVMWAREPLAT_SRCS-$(CONFIG_ARCH_X86_64) += $(LIBVMWAREPLAT_BASE)/x86/pagetable64.S
LIBVMWAREPLAT_SRCS-$(CONFIG_ARCH_X86_64) += $(LIBVMWAREPLAT_BASE)/x86/traps.c
LIBVMWAREPLAT_SRCS-$(CONFIG_ARCH_X86_64) += $(LIBVMWAREPLAT_BASE)/x86/cpu_vectors_x86_64.S
LIBVMWAREPLAT_SRCS-$(CONFIG_ARCH_X86_64) += $(LIBVMWAREPLAT_BASE)/x86/setup.c
LIBVMWAREPLAT_SRCS-$(CONFIG_ARCH_X86_64) += $(LIBVMWAREPLAT_BASE)/x86/console.c
LIBVMWAREPLAT_SRCS-$(CONFIG_ARCH_X86_64) += $(LIBVMWAREPLAT_BASE)/x86/lcpu.c
LIBVMWAREPLAT_SRCS-$(CONFIG_ARCH_X86_64) += $(LIBVMWAREPLAT_BASE)/x86/lcpu_start.S
LIBVMWAREPLAT_SRCS-$(CONFIG_ARCH_X86_64) += $(LIBVMWAREPLAT_BASE)/x86/tscclock.c
LIBVMWAREPLAT_SRCS-$(CONFIG_ARCH_X86_64) += $(LIBVMWAREPLAT_BASE)/x86/time.c
ifeq ($(findstring y,$(CONFIG_VMWARE_KERNEL_VGA_CONSOLE) $(CONFIG_VMWARE_DEBUG_VGA_CONSOLE)),y)
LIBVMWAREPLAT_SRCS-$(CONFIG_ARCH_X86_64) += $(LIBVMWAREPLAT_BASE)/x86/vga_console.c
endif
ifeq ($(findstring y,$(CONFIG_VMWARE_KERNEL_SERIAL_CONSOLE) $(CONFIG_VMWARE_DEBUG_SERIAL_CONSOLE)),y)
LIBVMWAREPLAT_SRCS-$(CONFIG_ARCH_X86_64) += $(LIBVMWAREPLAT_BASE)/x86/serial_console.c
endif

##
## Architecture library definitions for arm64
##
ifeq ($(CONFIG_PAGING),y)
LIBVMWAREPLAT_SRCS-$(CONFIG_ARCH_ARM_64) += $(UK_PLAT_COMMON_BASE)/paging.c|isr
endif
ifeq ($(CONFIG_ENFORCE_W_XOR_X),y)
LIBVMWAREPLAT_SRCS-$(CONFIG_ARCH_ARM_64) += $(UK_PLAT_COMMON_BASE)/w_xor_x.c|common
endif
ifeq ($(CONFIG_ARM64_FEAT_PAUTH),y)
LIBVMWAREPLAT_SRCS-$(CONFIG_ARCH_ARM_64) += $(UK_PLAT_COMMON_BASE)/arm/pauth.c|common
endif
LIBVMWAREPLAT_SRCS-$(CONFIG_ARCH_ARM_64) += $(UK_PLAT_COMMON_BASE)/arm/cpu_native.c|common
LIBVMWAREPLAT_SRCS-$(CONFIG_ARCH_ARM_64) += $(UK_PLAT_COMMON_BASE)/arm/cache64.S|common
LIBVMWAREPLAT_SRCS-$(CONFIG_ARCH_ARM_64) += $(UK_PLAT_COMMON_BASE)/arm/smccc.c|common
LIBVMWAREPLAT_SRCS-$(CONFIG_ARCH_ARM_64) += $(UK_PLAT_COMMON_BASE)/arm/smccc_invoke.S|common
LIBVMWAREPLAT_SRCS-$(CONFIG_ARCH_ARM_64) += $(UK_PLAT_COMMON_BASE)/arm/time.c|common
LIBVMWAREPLAT_SRCS-$(CONFIG_ARCH_ARM_64) += $(UK_PLAT_COMMON_BASE)/arm/generic_timer.c|common
LIBVMWAREPLAT_SRCS-$(CONFIG_ARCH_ARM_64) += $(UK_PLAT_COMMON_BASE)/arm/lcpu.c|arm64_common
LIBVMWAREPLAT_SRCS-$(CONFIG_ARCH_ARM_64) += $(UK_PLAT_COMMON_BASE)/arm/traps_arm64.c|isr
LIBVMWAREPLAT_SRCS-$(CONFIG_ARCH_ARM_64) += $(UK_PLAT_COMMON_BASE)/tls.c|common
LIBVMWAREPLAT_SRCS-$(CONFIG_FPSIMD)      += $(UK_PLAT_COMMON_BASE)/arm/fp_arm64.c|isr
ifeq ($(CONFIG_HAVE_SMP),y)
LIBVMWAREPLAT_SRCS-$(CONFIG_ARCH_ARM_64) += $(UK_PLAT_COMMON_BASE)/arm/lcpu_start.S
endif
LIBVMWAREPLAT_SRCS-$(CONFIG_ARCH_ARM_64) += $(LIBVMWAREPLAT_BASE)/arm/entry64.S|isr
LIBVMWAREPLAT_SRCS-$(CONFIG_ARCH_ARM_64) += $(LIBVMWAREPLAT_BASE)/arm/exceptions.S|isr
LIBVMWAREPLAT_SRCS-$(CONFIG_ARCH_ARM_64) += $(LIBVMWAREPLAT_BASE)/arm/pagetable64.S|isr
LIBVMWAREPLAT_SRCS-$(CONFIG_ARCH_ARM_64) += $(LIBVMWAREPLAT_BASE)/arm/setup.c
LIBVMWAREPLAT_SRCS-$(CONFIG_ARCH_ARM_64) += $(LIBVMWAREPLAT_BASE)/arm/lcpu.c

LIBVMWAREPLAT_SRCS-y                          += $(LIBVMWAREPLAT_BASE)/shutdown.c
LIBVMWAREPLAT_SRCS-y                          += $(LIBVMWAREPLAT_BASE)/memory.c
LIBVMWAREPLAT_SRCS-y                          += $(LIBVMWAREPLAT_BASE)/io.c
LIBVMWAREPLAT_SRCS-y                          += $(UK_PLAT_COMMON_BASE)/lcpu.c|common
LIBVMWAREPLAT_SRCS-y                          += $(UK_PLAT_COMMON_BASE)/memory.c|common
LIBVMWAREPLAT_SRCS-y                          += $(UK_PLAT_VMWARE_DEF_LDS)
LIBVMWAREPLAT_SRCS-$(CONFIG_UKPLAT_ACPI)      += $(UK_PLAT_COMMON_BASE)/acpi.c|common
LIBVMWAREPLAT_SRCS-y		                  += $(UK_PLAT_COMMON_BASE)/bootinfo.c|common
LIBVMWAREPLAT_SRCS-$(CONFIG_LIBFDT)           += $(UK_PLAT_COMMON_BASE)/bootinfo_fdt.c|common
LIBVMWAREPLAT_SRCS-y		                  += $(UK_PLAT_COMMON_BASE)/bootinfo.lds.S|common

##
## RTC-PL031 library definitions
##
LIBVMWAREPL031_CINCLUDES-y		+= -I$(LIBVMWAREPLAT_BASE)/include
LIBVMWAREPL031_CINCLUDES-y		+= -I$(UK_PLAT_COMMON_BASE)/include
LIBVMWAREPL031_CINCLUDES-y		+= -I$(UK_PLAT_DRIVERS_BASE)/include

LIBVMWAREPL031_SRCS-y		+= $(UK_PLAT_DRIVERS_BASE)/rtc/pl031.c
LIBVMWAREPL031_SRCS-y		+= $(UK_PLAT_DRIVERS_BASE)/rtc/rtc.c
